services:

  frontendapp4-container:
    container_name: frontendapp4-container
    image: timothyfudocker/frontendapp4
    networks:
      - app-network  # Attach to the same network

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx
    depends_on:
      - frontendapp4-container  # Wait for frontendapp4-container to start first
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/var/www/certbot/config
      - ./certbot/www:/var/www/certbot
    networks:
      - app-network  # Attach to the same network

  nginx-https:
    container_name: nginx-https
    restart: unless-stopped
    build: ./nginx-https  # Build the nginx-https image from a Dockerfile
    depends_on:
      - certbot  # Wait for certbot to be ready before starting nginx-https
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx-https/nginx-https.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/var/www/certbot/config
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "
      echo 'Checking for processes using ports 80 and 443...' &&
      sudo lsof -i :80 -t | xargs -r sudo kill -9 &&
      sudo lsof -i :443 -t | xargs -r sudo kill -9 &&
      echo 'Starting Nginx with HTTPS config...' &&
      nginx -g 'daemon off;'"
    networks:
      - app-network  # Attach to the same network

networks:
  app-network:
    driver: bridge  # Define the network
